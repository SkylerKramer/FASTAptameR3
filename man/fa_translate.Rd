% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate_analyses.R
\name{fa_translate}
\alias{fa_translate}
\title{Translate sequences according to a provided genetic code or a user-defined genetic code}
\usage{
fa_translate(
  faDF = NULL,
  orf = 1,
  converge = TRUE,
  inputChanges = NULL,
  translateSelection = "Standard"
)
}
\arguments{
\item{faDF}{A FASTAptameR data.frame}

\item{orf}{The open reading frame to use for translating (default: 1, implying that translations should start at position 1)}

\item{converge}{A logical indicating whether sequences should be recounted after translating them}

\item{inputChanges}{A data.frame with two columns (Codon and Translation), indicating modifications to the specificed genetic code}

\item{translateSelection}{A standard name that refers to a specific JSON file with codon usage information}
}
\value{
A data.frame with translated sequences
}
\description{
\code{fa_translate} translates nucleotide sequences in a counted data.frame to amino acid sequences based on a standard or modified genetic code.
The open reading frame can be set with the \code{orf} parameter.
Optionally, translated sequences can be recounted (set \code{converge} = TRUE) such that the counts of unique nucleotide sequences that code for the same protein sequence are summed together.
The following genetic codes are recognized:
\enumerate{
\item Standard
\item Vertebrate mitochondrial
\item Yeast mitochondrial
\item Mold, protozoan, and coelenterate mitochondrial + Mycoplasma / Spiroplasma
\item Invertebrate mitochondrial
\item Ciliate, dasycladacean and Hexamita nuclear
\item Echinoderm and flatworm mitochondrial
\item Euplotid nuclear
\item Alternative yeast nuclear
\item Ascidian mitochondrial
\item Alternative flatworm mitochondrial
\item Blepharisma nuclear
\item Chlorophycean mitochondrial
\item Trematode mitochondrial
\item Scenedesmus obliquus mitochondrial
\item Pterobranchia mitochondrial
Additionally, these codes can be modified by supplying a two-column data.frame consisting of 3-letter codons and the resulting 1-letter amino acid codes.
}
}
\examples{
\dontrun{
# count FASTQ file
countData <- fa_count(dataInput = "PATH/TO/FILE.fastq")

# example of how to format the "inputChanges" data.frame
inputChanges <- data.frame(Codon = "AAA", Translation = "Z")

# translate data
translateData <- fa_translate(faDF = countData, inputChanges = inputChanges)
}

}
\seealso{
\code{\link[=fa_count]{fa_count()}}, \code{\link[=fa_count_rpr]{fa_count_rpr()}}, \code{\link[=fa_count_histogram]{fa_count_histogram()}}
}
