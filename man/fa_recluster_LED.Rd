% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recluster_plots.R
\name{fa_recluster_LED}
\alias{fa_recluster_LED}
\title{Return a bar plot of the average Levenshtein edit distance (LED) per population per cluster}
\usage{
fa_recluster_LED(
  recluster_df = NULL,
  xaxis = "Cluster",
  yaxis = "Avg. LED",
  plot_title = "Avg. LED per cluster",
  bar_outline = "black",
  bar_fill = "skyblue"
)
}
\arguments{
\item{recluster_df}{A reclustered FASTAptameR data.frame from \code{fa_recluster}}

\item{xaxis}{The title of the x-axis (default: "Cluster")}

\item{yaxis}{The title of the y-axis (default: "Avg. LED")}

\item{plot_title}{The title of the plot (default: "Avg. LED per cluster")}

\item{bar_outline}{The color of the bar outlines (default: "black")}

\item{bar_fill}{The color fo the bar fills (default: "skyblue")}
}
\value{
A plotly object showing the average LED between all sequences in the cluster and the cluster seed
}
\description{
\code{fa_recluster_LED} returns a bar plot that shows the average LED between all sequences in a cluster and that cluster's seed sequence.
}
\examples{
\dontrun{
# count FASTQ files, cluster data, recluster populations together
countData <- list(
  fa_count(dataInput = "PATH/TO/FILE1.fastq"),
  fa_count(dataInput = "PATH/TO/FILE2.fastq")
)
clusterData <- list(
  fa_clusterLED(faDF = countData[[1]]),
  fa_clusterLED(faDF = countData[[2]])
)
reclusterData <- fa_recluster(
  faDF1_cluster = clusterData[[1]],
  faDF2_cluster = clusterData[[2]]
)

# generate bar plot
fa_recluster_LED(recluster_df = reclusterData)
}

}
\seealso{
\code{\link[grDevices:colors]{grDevices::colors()}}, \code{\link[=fa_recluster]{fa_recluster()}}, \code{\link[=fa_recluster_popSize]{fa_recluster_popSize()}}, \code{\link[=fa_recluster_RPU]{fa_recluster_RPU()}}, \code{\link[=fa_recluster_enrich]{fa_recluster_enrich()}}
}
