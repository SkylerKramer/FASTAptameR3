% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recluster_plots.R
\name{fa_recluster_RPU}
\alias{fa_recluster_RPU}
\title{Return a bar plot of the average RPU per population per cluster}
\usage{
fa_recluster_RPU(
  recluster_df = NULL,
  xaxis = "Cluster",
  yaxis = "Avg. RPU",
  legend_title = "Population",
  plot_title = "Avg. RPU per cluster",
  bar_outline = "black",
  fill_palette_disc = "Dark2"
)
}
\arguments{
\item{recluster_df}{A reclustered FASTAptameR data.frame from \code{fa_recluster}}

\item{xaxis}{The title of the x-axis (default: "Cluster")}

\item{yaxis}{The title of the y-axis (default: "Avg. RPU")}

\item{legend_title}{The title of the legend (default: "Population")}

\item{plot_title}{The title of the plot (default: "Avg. RPU per cluster")}

\item{bar_outline}{The color of the bar outlines (default: "black")}

\item{fill_palette_disc}{A discrete RColorBrewer palette (default: "Dark2")}
}
\value{
A plotly object with a grouped bar plot showing the average RPU per population for each new cluster
}
\description{
\code{fa_recluster_RPU} returns a grouped bar plot that shows the average RPU of sequences from each population in each cluster.
}
\examples{
\dontrun{
# count FASTQ files, cluster data, recluster populations together
countData <- list(
  fa_count(dataInput = "PATH/TO/FILE1.fastq"),
  fa_count(dataInput = "PATH/TO/FILE2.fastq")
)
clusterData <- list(
  fa_clusterLED(faDF = countData[[1]]),
  fa_clusterLED(faDF = countData[[2]])
)
reclusterData <- fa_recluster(
  faDF1_cluster = clusterData[[1]],
  faDF2_cluster = clusterData[[2]]
)

# generate bar plot
fa_recluster_RPU(recluster_df = reclusterData)
}

}
\seealso{
\code{\link[grDevices:colors]{grDevices::colors()}}, \link[RColorBrewer:ColorBrewer]{RColorBrewer::brewer.pal.info}, \code{\link[=fa_recluster]{fa_recluster()}}, \code{\link[=fa_recluster_popSize]{fa_recluster_popSize()}}, \code{\link[=fa_recluster_LED]{fa_recluster_LED()}}, \code{\link[=fa_recluster_enrich]{fa_recluster_enrich()}}
}
