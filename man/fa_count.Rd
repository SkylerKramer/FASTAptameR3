% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_analyses.R
\name{fa_count}
\alias{fa_count}
\title{Count the number of occurrences of each unique sequence in a FASTA / FASTQ file}
\usage{
fa_count(dataInput = NULL, reverseComplement = FALSE, scaling_factor = 1e+06)
}
\arguments{
\item{dataInput}{Path to a FASTA or FASTQ file; can be gzipped}

\item{reverseComplement}{A logical value indicating if the function should return the reverse complement of sequences}

\item{scaling_factor}{The numeric value used to calculate RPU (Reads Per Unit); 1e6 = Reads per Million}
}
\value{
A data.frame with one row per unique sequence in the input file; each sequence includes its read count, normalized read count, and rank by read count
}
\description{
\code{fa_count} counts the number of occurrences for all unique sequences in an input FASTA / FASTQ file (that can be gzipped) and sorts sequences by read count.
Each sequence in the final data.frame has the following features: read count, normalized read count (RPU = Reads Per Unit, where "unit" is a user-defined scaling factor), and sequence length.
The sequence ID is a FASTA identifier in this form: ">{Rank}-{Reads}-{RPU}".
}
\examples{
\dontrun{
# count FASTQ file
countData <- fa_count(dataInput = "PATH/TO/FILE.fastq")
}

}
\seealso{
\code{\link[=fa_preprocess]{fa_preprocess()}}, \code{\link[=fa_recount]{fa_recount()}}, \code{\link[=fa_count_rpr]{fa_count_rpr()}}, \code{\link[=fa_count_histogram]{fa_count_histogram()}}, \code{\link[=fa_count_binnedAbundance]{fa_count_binnedAbundance()}}
}
