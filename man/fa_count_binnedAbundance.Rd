% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_plots.R
\name{fa_count_binnedAbundance}
\alias{fa_count_binnedAbundance}
\title{Return a binned abundance plot}
\usage{
fa_count_binnedAbundance(
  countData = NULL,
  useSingleton = TRUE,
  breaks = c(10, 100, 1000),
  xaxis = "Unique sequences",
  yaxis = "Fraction of population",
  plot_title = "Binned sequence abundance",
  bar_outline = "black",
  bar_fill = "skyblue"
)
}
\arguments{
\item{countData}{A data.frame from \code{fa_count}}

\item{useSingleton}{A logical indicating if singletons (i.e., sequences with only one read) should be in their own bin (default: TRUE)}

\item{breaks}{A numeric vector of breakpoints used to create discrete bins for read counts (default: 10, 100, 1000)}

\item{xaxis}{The title of the x-axis (default: "Unique sequences")}

\item{yaxis}{The title of the y-axis (default: "Fraction of population")}

\item{plot_title}{The title of the plot (default: "Binned sequence abundance")}

\item{bar_outline}{The color for the bar outlines (default: "black")}

\item{bar_fill}{The color for the bar fills (default: "skyblue")}
}
\value{
A plotly object showing the number of sequences in each bin, where bins are defined by read counts
}
\description{
\code{fa_count_binnedAbundance} returns a bar plot in which bars correspond to a range of read counts (e.g., 10-100 reads for a sequence).
The height of the bar corresponds to its fraction in the population, and the color corresponds to the number of unique reads for the bin.
}
\examples{
\dontrun{
# count FASTQ files
countData <- fa_count(dataInput = "PATH/TO/FILE.fastq")

# make bar plot
fa_count_binnedAbundance(countData = countData, useSingleton = TRUE, breaks = c(20, 200, 2000))
}

}
\seealso{
\code{\link[grDevices:colors]{grDevices::colors()}}, \code{\link[=fa_count]{fa_count()}}, \code{\link[=fa_count_rpr]{fa_count_rpr()}}, \code{\link[=fa_count_histogram]{fa_count_histogram()}}
}
